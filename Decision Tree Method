# -*- coding: utf-8 -*-
"""Amirhossein_Ashoori_AI_HW3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pd2q0WxsmFvyegN4R77fzsCK3wCCChw6
"""

# Import necessary libraries
!pip install tensorflow
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.tree import DecisionTreeClassifier,plot_tree
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, f1_score
from sklearn import svm

root = "/content/LungCancer.csv"

#Reading th CSV file
df = pd.read_csv(root)

df.head()

#Here is the inforamtion of data
df.info()

#We define a function to convert the objects into integers
def str_to_int(data):
  for col in data.columns:
    for i,item in enumerate(data[col]):
      if isinstance(item,str):
        try:
          data.at[i,col] = int(item)
          data.at[i,col] = float(item)
        except ValueError:
          if data[col].dtype == "object":
            labels, _= pd.factorize(data[col])
            data[col] = labels

  return data

str_to_int(df)

clf = DecisionTreeClassifier()

#The last column (target) is the output
X = df.drop("Level",axis=1)
y = df["Level"]

X

y

#Split test and train
x_train,x_test,y_train,y_test=train_test_split(X,y,test_size = 0.25, random_state = 42)

clf.fit(x_train,y_train)

#Evaluation of accuracy
y_pred = clf.predict(x_test)
accuracy = accuracy_score(y_test,y_pred)

#Evaluation of f1_score
f1 = f1_score(y_test,y_pred,average = "macro")

accuracy

f1

#Plot the Decision tree
plt.figure(figsize=(100,100))
plot_tree(clf,filled=True,node_ids=True,impurity = False,max_depth=None,fontsize=10)
plt.show()

df.columns

clf_1 = DecisionTreeClassifier(criterion="entropy",splitter="random")
clf_1.fit(x_train,y_train)

#Define clf with different criterion. It results in same accuracy.
y_pred = clf_1.predict(x_test)
accuracy = accuracy_score(y_test,y_pred)

accuracy
